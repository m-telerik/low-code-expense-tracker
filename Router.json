```json
{
  "name": "01.Router",
  "nodes": [
    {
      "parameters": {
        "operation": "select",
        "schema": {
          "__rl": true,
          "mode": "list",
          "value": "public"
        },
        "table": {
          "__rl": true,
          "value": "profiles",
          "mode": "list",
          "cachedResultName": "profiles"
        },
        "limit": 1,
        "where": {
          "values": [
            {
              "column": "telegram_id",
              "value": "={{ $json.message.from.id }}"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.postgres",
      "typeVersion": 2.6,
      "position": [
        -1472,
        272
      ],
      "id": "ebc4d7bc-021e-494c-bd05-15b719a4b378",
      "name": "check-registration",
      "alwaysOutputData": true
    },
    {
      "parameters": {
        "mode": "combine",
        "combineBy": "combineAll",
        "options": {}
      },
      "type": "n8n-nodes-base.merge",
      "typeVersion": 3.2,
      "position": [
        -1248,
        192
      ],
      "id": "8133b0d7-6587-4241-9471-88a1d01bb6b9",
      "name": "Merge"
    },
    {
      "parameters": {},
      "type": "n8n-nodes-base.noOp",
      "typeVersion": 1,
      "position": [
        224,
        624
      ],
      "id": "8d89922b-dd8a-4c32-b68c-e696ac133c62",
      "name": "No Operation, do nothing"
    },
    {
      "parameters": {
        "inputText": "={{ $json.content }}",
        "categories": {
          "categories": [
            {
              "category": "SingleTXN",
              "description": "Single financial transactions: 'кофе 120 бат', 'coffee 5 USD', 'обед 250₽', 'lunch 15€', 'coffee 5€'. Must contain amount and currency identifier - symbol, ISO code, or currency name."
            },
            {
              "category": "Report",
              "description": "'отчет, `report`, 'show my stats'"
            },
            {
              "category": "MultiTXN",
              "description": "Multi financial transactions: 'кофе 120 бат, обед 250₽', 'lunch 15€, coffee 5€'. Must contain more then one (amount, currency identifier - symbol, ISO code, or currency name, description) for each transaction. "
            },
            {
              "category": "Help",
              "description": "need support, need help, позови поддержку"
            }
          ]
        },
        "options": {
          "fallback": "other"
        }
      },
      "type": "@n8n/n8n-nodes-langchain.textClassifier",
      "typeVersion": 1.1,
      "position": [
        -352,
        864
      ],
      "id": "694455f9-b95c-4380-a14e-2976944945cd",
      "name": "Text Classifier"
    },
    {
      "parameters": {
        "workflowId": {
          "__rl": true,
          "value": "IiIm9FhN2186np1N",
          "mode": "list",
          "cachedResultName": "5.Media"
        },
        "workflowInputs": {
          "mappingMode": "defineBelow",
          "value": {
            "type": "={{ $json.type }}",
            "content": "={{ $json.content }}",
            "response_metadata": "={{ $json.response_metadata }}"
          },
          "matchingColumns": [],
          "schema": [
            {
              "id": "type",
              "displayName": "type",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "canBeUsedToMatch": true,
              "type": "string"
            },
            {
              "id": "content",
              "displayName": "content",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "canBeUsedToMatch": true,
              "type": "string"
            },
            {
              "id": "response_metadata",
              "displayName": "response_metadata",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "canBeUsedToMatch": true
            }
          ],
          "attemptToConvertTypes": false,
          "convertFieldsToString": true
        },
        "options": {
          "waitForSubWorkflow": false
        }
      },
      "type": "n8n-nodes-base.executeWorkflow",
      "typeVersion": 1.2,
      "position": [
        0,
        384
      ],
      "id": "d6e02faa-d8a8-4709-bcb1-5ebe1314f2f6",
      "name": "Call Cashie.Media"
    },
    {
      "parameters": {
        "workflowId": {
          "__rl": true,
          "value": "Cow55jpIX9NmfRki",
          "mode": "list",
          "cachedResultUrl": "/workflow/Cow55jpIX9NmfRki",
          "cachedResultName": "3.Transactions"
        },
        "workflowInputs": {
          "mappingMode": "defineBelow",
          "value": {
            "type": "={{ $json.type }}",
            "content": "={{ $json.content }}",
            "response_metadata": "={{ $json.response_metadata }}"
          },
          "matchingColumns": [],
          "schema": [
            {
              "id": "type",
              "displayName": "type",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "canBeUsedToMatch": true,
              "type": "string"
            },
            {
              "id": "content",
              "displayName": "content",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "canBeUsedToMatch": true,
              "type": "string"
            },
            {
              "id": "response_metadata",
              "displayName": "response_metadata",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "canBeUsedToMatch": true
            }
          ],
          "attemptToConvertTypes": false,
          "convertFieldsToString": true
        },
        "options": {
          "waitForSubWorkflow": false
        }
      },
      "type": "n8n-nodes-base.executeWorkflow",
      "typeVersion": 1.2,
      "position": [
        0,
        576
      ],
      "id": "3d69fee1-8dc3-4459-a16f-b010ab1a3d1f",
      "name": "Call Cashie.Transaction"
    },
    {
      "parameters": {
        "workflowId": {
          "__rl": true,
          "value": "nXDZVldNUz2Bvf18",
          "mode": "list",
          "cachedResultName": "2.Onboard"
        },
        "workflowInputs": {
          "mappingMode": "defineBelow",
          "value": {
            "type": "={{ $json.type }}",
            "content": "={{ $json.content }}",
            "response_metadata": "={{ $json.response_metadata }}"
          },
          "matchingColumns": [],
          "schema": [
            {
              "id": "type",
              "displayName": "type",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "canBeUsedToMatch": true,
              "type": "string"
            },
            {
              "id": "content",
              "displayName": "content",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "canBeUsedToMatch": true,
              "type": "string"
            },
            {
              "id": "response_metadata",
              "displayName": "response_metadata",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "canBeUsedToMatch": true
            }
          ],
          "attemptToConvertTypes": false,
          "convertFieldsToString": true
        },
        "options": {
          "waitForSubWorkflow": false
        }
      },
      "type": "n8n-nodes-base.executeWorkflow",
      "typeVersion": 1.2,
      "position": [
        0,
        192
      ],
      "id": "90a06d1b-f776-40c6-811d-bbaba4eefa0f",
      "name": "Call Cashie.Onboard"
    },
    {
      "parameters": {
        "workflowId": {
          "__rl": true,
          "value": "gS3xghjmSwlVNsEM",
          "mode": "list",
          "cachedResultUrl": "/workflow/gS3xghjmSwlVNsEM",
          "cachedResultName": "5.Help"
        },
        "workflowInputs": {
          "mappingMode": "defineBelow",
          "value": {
            "type": "={{ $json.type }}",
            "content": "={{ $json.content }}",
            "response_metadata": "={{ $json.response_metadata }}"
          },
          "matchingColumns": [],
          "schema": [
            {
              "id": "type",
              "displayName": "type",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "canBeUsedToMatch": true,
              "type": "string"
            },
            {
              "id": "content",
              "displayName": "content",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "canBeUsedToMatch": true,
              "type": "string"
            },
            {
              "id": "response_metadata",
              "displayName": "response_metadata",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "canBeUsedToMatch": true
            }
          ],
          "attemptToConvertTypes": false,
          "convertFieldsToString": true
        },
        "options": {
          "waitForSubWorkflow": false
        }
      },
      "type": "n8n-nodes-base.executeWorkflow",
      "typeVersion": 1.2,
      "position": [
        0,
        1152
      ],
      "id": "3911715f-9493-43cb-b9c0-bfc3f928c58e",
      "name": "Call Cashie.Help"
    },
    {
      "parameters": {
        "jsCode": "// n8n Code Node - JavaScript\nconst inputData = $input.all();\nconst results = inputData.map(item => {\n  // Данные находятся непосредственно в item.json, но если это массив - берем первый элемент\n  let data;\n  if (Array.isArray(item.json)) {\n    data = item.json[0];\n  } else if (item.json) {\n    data = item.json;\n  } else {\n    // Если нет поля json, значит данные находятся непосредственно в item\n    data = item;\n  }\n  \n  // Извлекаем message-text\n  const messageText = data[\"message-text\"] || \"\";\n  \n  // Поля базы данных в нужном порядке\n  const dbFields = {\n    id: data.id,\n    telegram_id: data.telegram_id,\n    base_currency: data.base_currency,\n    plan: data.plan,\n    pro_until: data.pro_until,\n    allowed_currencies: data.allowed_currencies,\n    locale: data.locale,\n    test_user: data.test_user,\n    onboarding_status: data.onboarding_status,\n    created_at: data.created_at,\n    updated_at: data.updated_at,\n    reminder_opt_in: data.reminder_opt_in,\n    status: data.status,\n    deactivated_at: data.deactivated_at\n  };\n  \n  // Все остальные поля (исключаем поля базы данных и message-text)\n  const excludeFields = new Set([\n    'id', 'telegram_id', 'base_currency', 'plan', 'pro_until', \n    'allowed_currencies', 'locale', 'test_user', 'onboarding_status', \n    'created_at', 'updated_at', 'reminder_opt_in', 'status', \n    'deactivated_at', 'message-text'\n  ]);\n  \n  const otherFields = {};\n  for (const [key, value] of Object.entries(data)) {\n    if (!excludeFields.has(key)) {\n      otherFields[key] = value;\n    }\n  }\n  \n  // Формируем итоговый объект\n  const result = {\n    type: \"human\",\n    content: messageText,\n    response_metadata: {\n      ...dbFields,\n      ...otherFields\n    }\n  };\n  \n  return {\n    json: result\n  };\n});\n\nreturn results;"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        -1024,
        192
      ],
      "id": "a5ddba77-7889-4c05-91a4-38ef4f3b7c99",
      "name": "to-memory-format"
    },
    {
      "parameters": {
        "model": "openai/gpt-4o-mini",
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.lmChatOpenRouter",
      "typeVersion": 1,
      "position": [
        -272,
        1152
      ],
      "id": "1f7935b9-18c5-4dfa-b83a-5240128f5b26",
      "name": "gpt-4o-mini"
    },
    {
      "parameters": {
        "workflowId": {
          "__rl": true,
          "value": "oBw9SSCseraFmTSs",
          "mode": "list",
          "cachedResultUrl": "/workflow/oBw9SSCseraFmTSs",
          "cachedResultName": "5.Report"
        },
        "workflowInputs": {
          "mappingMode": "defineBelow",
          "value": {
            "type": "={{ $json.type }}",
            "content": "={{ $json.content }}",
            "response_metadata": "={{ $json.response_metadata }}"
          },
          "matchingColumns": [],
          "schema": [
            {
              "id": "type",
              "displayName": "type",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "canBeUsedToMatch": true,
              "type": "string",
              "removed": false
            },
            {
              "id": "content",
              "displayName": "content",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "canBeUsedToMatch": true,
              "type": "string",
              "removed": false
            },
            {
              "id": "response_metadata",
              "displayName": "response_metadata",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "canBeUsedToMatch": true,
              "removed": false
            }
          ],
          "attemptToConvertTypes": false,
          "convertFieldsToString": true
        },
        "options": {
          "waitForSubWorkflow": false
        }
      },
      "type": "n8n-nodes-base.executeWorkflow",
      "typeVersion": 1.2,
      "position": [
        0,
        768
      ],
      "id": "1fbd0667-e997-4db2-aa68-3bd994d0302d",
      "name": "Call 'Cashie.Report'"
    },
    {
      "parameters": {
        "rules": {
          "values": [
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 2
                },
                "conditions": [
                  {
                    "id": "c6f33c66-85b7-4878-b9c8-9f1334d89576",
                    "leftValue": "={{ $json.response_metadata.onboarding_status }}",
                    "rightValue": "false",
                    "operator": {
                      "type": "boolean",
                      "operation": "false",
                      "singleValue": true
                    }
                  }
                ],
                "combinator": "and"
              },
              "renameOutput": true,
              "outputKey": "onboard"
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 2
                },
                "conditions": [
                  {
                    "id": "ea2a5653-3696-44a1-b80f-963053ea3681",
                    "leftValue": "={{ ['voice', 'photo', 'doc', 'video'].includes($json.response_metadata.input_type) }}",
                    "rightValue": "={{ ['voice', 'photo'].includes($json.response_metadata.input_type) }}",
                    "operator": {
                      "type": "boolean",
                      "operation": "true",
                      "singleValue": true
                    }
                  }
                ],
                "combinator": "and"
              },
              "renameOutput": true,
              "outputKey": "media"
            }
          ]
        },
        "options": {
          "fallbackOutput": "extra"
        }
      },
      "type": "n8n-nodes-base.switch",
      "typeVersion": 3.2,
      "position": [
        -576,
        368
      ],
      "id": "d4cbebe9-4f6f-4068-97bc-2202c4848bd0",
      "name": "Switch"
    },
    {
      "parameters": {
        "inputSource": "passthrough"
      },
      "type": "n8n-nodes-base.executeWorkflowTrigger",
      "typeVersion": 1.1,
      "position": [
        -1696,
        192
      ],
      "id": "012fd7dc-4ce0-4927-9d4a-d96884b1e330",
      "name": "When Executed by Another Workflow"
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "a72bf14e-da64-4e09-91f1-f3baea170131",
              "leftValue": "={{ $json.response_metadata.message.reply_to_message }}",
              "rightValue": "",
              "operator": {
                "type": "object",
                "operation": "exists",
                "singleValue": true
              }
            },
            {
              "id": "f19df553-1af1-42bb-9a5b-2db6962b39ca",
              "leftValue": "={{ $json.response_metadata.callback_query }}",
              "rightValue": "",
              "operator": {
                "type": "object",
                "operation": "exists",
                "singleValue": true
              }
            }
          ],
          "combinator": "or"
        },
        "options": {}
      },
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [
        -800,
        192
      ],
      "id": "9fea0ec4-8748-411a-9fad-f2566f85a475",
      "name": "reply?"
    },
    {
      "parameters": {
        "workflowId": {
          "__rl": true,
          "value": "6YZHxoNcLDf1OAFn",
          "mode": "list",
          "cachedResultUrl": "/workflow/6YZHxoNcLDf1OAFn",
          "cachedResultName": "TNX Manager"
        },
        "workflowInputs": {
          "mappingMode": "defineBelow",
          "value": {
            "type": "={{ $json.type }}",
            "content": "={{ $json.content }}",
            "response_metadata": "={{ $json.response_metadata }}"
          },
          "matchingColumns": [],
          "schema": [
            {
              "id": "type",
              "displayName": "type",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "canBeUsedToMatch": true,
              "type": "string",
              "removed": false
            },
            {
              "id": "content",
              "displayName": "content",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "canBeUsedToMatch": true,
              "type": "string",
              "removed": false
            },
            {
              "id": "response_metadata",
              "displayName": "response_metadata",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "canBeUsedToMatch": true,
              "removed": false
            }
          ],
          "attemptToConvertTypes": false,
          "convertFieldsToString": true
        },
        "options": {
          "waitForSubWorkflow": false
        }
      },
      "type": "n8n-nodes-base.executeWorkflow",
      "typeVersion": 1.3,
      "position": [
        0,
        0
      ],
      "id": "ab62bd39-6d63-48ba-b660-728d32aac1ed",
      "name": "Call 'TXN Manager'"
    },
    {
      "parameters": {
        "workflowId": {
          "__rl": true,
          "value": "yED0N6V7xpczpv8q",
          "mode": "list",
          "cachedResultUrl": "/workflow/yED0N6V7xpczpv8q",
          "cachedResultName": "multiTXN"
        },
        "workflowInputs": {
          "mappingMode": "defineBelow",
          "value": {
            "type": "={{ $json.type }}",
            "content": "={{ $json.content }}",
            "response_metadata": "={{ $json.response_metadata }}"
          },
          "matchingColumns": [],
          "schema": [
            {
              "id": "type",
              "displayName": "type",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "canBeUsedToMatch": true,
              "type": "string",
              "removed": false
            },
            {
              "id": "content",
              "displayName": "content",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "canBeUsedToMatch": true,
              "type": "string",
              "removed": false
            },
            {
              "id": "response_metadata",
              "displayName": "response_metadata",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "canBeUsedToMatch": true,
              "removed": false
            }
          ],
          "attemptToConvertTypes": false,
          "convertFieldsToString": true
        },
        "options": {
          "waitForSubWorkflow": false
        }
      },
      "type": "n8n-nodes-base.executeWorkflow",
      "typeVersion": 1.3,
      "position": [
        0,
        960
      ],
      "id": "77197df1-d1d6-4dc5-b673-47219c8a832f",
      "name": "Call 'multiTXN'"
    }
  ],
  "pinData": {},
  "connections": {
    "check-registration": {
      "main": [
        [
          {
            "node": "Merge",
            "type": "main",
            "index": 1
          }
        ]
      ]
    },
    "Merge": {
      "main": [
        [
          {
            "node": "to-memory-format",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Text Classifier": {
      "main": [
        [
          {
            "node": "Call Cashie.Transaction",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Call 'Cashie.Report'",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Call 'multiTXN'",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Call Cashie.Help",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Call Cashie.Help",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Call Cashie.Onboard": {
      "main": [
        [
          {
            "node": "No Operation, do nothing",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Call Cashie.Transaction": {
      "main": [
        [
          {
            "node": "No Operation, do nothing",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Call Cashie.Media": {
      "main": [
        [
          {
            "node": "No Operation, do nothing",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Call Cashie.Help": {
      "main": [
        [
          {
            "node": "No Operation, do nothing",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "to-memory-format": {
      "main": [
        [
          {
            "node": "reply?",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "gpt-4o-mini": {
      "ai_languageModel": [
        [
          {
            "node": "Text Classifier",
            "type": "ai_languageModel",
            "index": 0
          }
        ]
      ]
    },
    "Call 'Cashie.Report'": {
      "main": [
        [
          {
            "node": "No Operation, do nothing",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Switch": {
      "main": [
        [
          {
            "node": "Call Cashie.Onboard",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Call Cashie.Media",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Text Classifier",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "When Executed by Another Workflow": {
      "main": [
        [
          {
            "node": "Merge",
            "type": "main",
            "index": 0
          },
          {
            "node": "check-registration",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "reply?": {
      "main": [
        [
          {
            "node": "Call 'TXN Manager'",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Switch",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Call 'TXN Manager'": {
      "main": [
        [
          {
            "node": "No Operation, do nothing",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Call 'multiTXN'": {
      "main": [
        [
          {
            "node": "No Operation, do nothing",
            "type": "main",
            "index": 0
          }
        ]
      ]
    }
  }
}
```